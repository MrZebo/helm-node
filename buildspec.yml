version: 0.2
env:
  variables:
    PROJECT: "test-node-app"  
    STAGE: "dev"
phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.eu-central-1.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl   
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip &&  ./aws/install
      - chmod +x ./kubectl ./aws-iam-authenticator
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - apt-get update && apt-get -y install jq python3-pip python3-dev
      - export KUBECONFIG=$HOME/.kube/config

  build:
    commands:
      - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${ACC_ID}.dkr.ecr.eu-central-1.amazonaws.com/
      - VERSION=$(bash scripts/versioning_aws)
      - docker build -t ${PROJECT}:latest -f Dockerfile .
      - docker tag ${PROJECT}:latest ${ACC_ID}.dkr.ecr.eu-central-1.amazonaws.com/${PROJECT}:latest
      - docker tag ${PROJECT}:latest ${ACC_ID}.dkr.ecr.eu-central-1.amazonaws.com/${PROJECT}:${VERSION}
      - docker push ${ACC_ID}.dkr.ecr.eu-central-1.amazonaws.com/${PROJECT}
  post_build:
    commands:
#      - echo 'aws sts get-caller-identity'
#      - aws sts assume-role --role-arn arn:aws:iam::${ACC_ID}:root --role-session-name codebuild-kubectl --duration-seconds 900
      - aws eks update-kubeconfig --name ${PROJECT}
      - kubectl apply -f k8s.yaml
